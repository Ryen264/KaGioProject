//"Model.h"
#pragma once

void ResetData();				        //hàm tái thiết trò chơi
void GabageCollect();			      //hàm dọn dẹp tài nguyên
int TestBoard();				        //hàm kiểm tra thắng thua
int CheckBoard(int pX, int pY);	//hàm đánh dấu bàn cờ

//"Model.cpp"
#include "Model.h"
#include "Global.h"

void ResetData()
{
	for (int i = 0; i < BOARD_SIZE; i++)
	{
		for (int j = 0; j < BOARD_SIZE; j++)
		{
			_A[i][j].x = 4 * j + LEFT + 2;	//Trùng với hoành độ màn hình bàn cờ
			_A[i][j].y = 2 * i + TOP + 1;	//Trùng với tung  độ màn hình bàn cờ
			_A[i][j].c = 0;					//0: chưa ai đánh dấu. -1: lượt người 1 đánh dấu, 1: lượt người 2 đánh dấu
		}
	}
	//Gán lượt và phím mặc định
	_TURN = true;
	_COMMAND = -1;

	//Thiết lập lại tọa độ hiện hành ban đầu
	_X = _A[0][0].x;
	_Y = _A[0][0].y;
}

void GabageCollect()
{
	//Dọn dẹp nếu có khai báo con trỏ
}

int TestBoard()
{
	/*
	if (<Ma trận đầy>) return 0;	//Hòa
	if(<tồn tại điều kiện thắng theo luật caro>)
		return (_TURN ? -1 : 1);	//-1: người 1 thắng, 1: người 2 thắng
	*/
	return 2;						//2 : chưa ai thắng 
}

int CheckBoard(int pX, int pY)
{
	for (int i = 0; i < BOARD_SIZE; i++)
	{
		for (int j = 0; j < BOARD_SIZE; j++)
		{
			if (_A[i][j].x == pX && _A[i][j].y == pY && _A[i][j].c == 0)
			{
				_A[i][j].c = (_TURN ? -1 : 1);	//c = -1: lượt người 1, c = 1: lượt người 2
				return _A[i][j].c;
			}
		}
	}
	return 0;
}

